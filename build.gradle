apply plugin: 'java'
//description ="Project to build Trumps Wall"


repositories {
    mavenCentral()
}

dependencies {
  //compile group: 'org.hibernate', name: 'hibernate-core', version: '3.6.7.Final'
  compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
  compile group: 'org.testng', name: 'testng', version: '6.+'
  //dependency('commons-cli:commons-cli:1.3.1')
  //testCompile group: 'org.testng', name: 'testng', version: '6.8.21'
}

sourceSets {
  main {
      java {
          srcDirs = ['src']
      }
      resources {
          srcDirs = ['src/main/resources']
      }
      test {
          srcDirs = ['src/test']
      }
  }
}

task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
}

test {
  useTestNG()

  include 'test/java/com/eptent/trumpswall/**'

  // show standard out and standard error of the test JVM(s) on the console
  testLogging.showStandardStreams = true

  // set heap size for the test JVM(s)
  minHeapSize = "128m"
  maxHeapSize = "512m"

  // set JVM arguments for the test JVM(s)
  jvmArgs '-XX:MaxPermSize=256m'

  // listen to events in the test execution lifecycle
  beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
  }

  // listen to standard out and standard error of the test JVM(s)
  onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  }
}
